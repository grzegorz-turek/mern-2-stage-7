{"version":3,"sources":["components/common/Logo/Logo.js","components/layout/MainMenu/MainMenu.js","components/features/NavBar/NavBar.js","components/layout/PageContainer/PageContainer.js","components/layout/MainLayout/MainLayout.js","components/common/PageTitle/PageTitle.js","config.js","redux/postsRedux.js","components/common/Button/Button.js","components/common/SmallTitle/SmallTitle.js","components/common/HtmlBox/HtmlBox.js","components/features/PostSummary/PostSummaryContainer.js","components/features/PostSummary/PostSummary.js","components/features/PostsList/PostsList.js","components/common/Spinner/Spinner.js","components/common/Alert/Alert.js","components/common/Pagination/Pagination.js","components/features/Posts/Posts.js","components/features/Posts/PostsContainer.js","components/pages/Home/HomePage.js","components/features/PostsCounter/PostsCounter.js","components/features/PostsCounter/PostsCounterContainer.js","components/pages/Posts/PostsPage.js","components/pages/Contact/ContactPage.js","components/pages/NotFound/NotFoundPage.js","components/common/TextField/TextField.js","components/common/SectionTitle/SectionTitle.js","components/features/PostForm/PostForm.js","components/features/PostForm/PostFormContainer.js","components/pages/AddPost/AddPostPage.js","components/features/SinglePost/SinglePost.js","components/features/SinglePost/SinglePostContainer.js","components/pages/SinglePost/SinglePostPage.js","App.js","redux/store.js","index.js"],"names":["Logo","links","location","className","MainMenu","map","link","index","key","pathname","path","to","title","withRouter","props","NavBar","state","this","React","Component","PageContainer","children","MainLayout","PageTitle","BASE_URL","getRequest","posts","request","getPages","Math","ceil","amount","postsPerPage","createActionName","name","LOAD_POSTS","START_REQUEST","END_REQUEST","ERROR_REQUEST","LOAD_SINGLE_POST","RESET_REQUEST","LOAD_POSTS_PAGE","startRequest","type","endRequest","errorRequest","error","resetRequest","loadPostsByPage","payload","initialState","data","pending","success","singlePost","id","content","author","presentPage","Button","variant","otherProps","SmallTitle","HtmlBox","ReactHtmlParser","cutText","maxLength","length","substr","lastIndexOf","PostSummary","PostsList","post","Spinner","animationIn","animationOut","Alert","icon","Pagination","initialPage","changePage","newPage","onPageChange","setState","skipToPage","increment","pages","onClick","Array","el","page","Posts","loadPostsPage","pagination","undefined","connect","dispatch","a","startAt","limit","axios","get","res","message","loadPostsByPageRequest","HomePage","PostsCounter","PostsPage","ContactPage","NotFoundPage","TextField","value","label","onChange","SectionTitle","PostForm","handleChange","e","target","handleEditor","text","addPost","preventDefault","onSubmit","options","placeholder","toolbar","buttons","addPostRequest","AddPostPage","SinglePost","loadSinglePost","appId","href","loadSinglePostRequest","SinglePostPage","SinglePostContainer","match","params","App","exact","component","rootReducer","combineReducers","statePart","action","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f25beffa.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport './Logo.scss';\r\n\r\nconst Logo = ({ links, location }) => (\r\n  <h1 className=\"logo\">Blog.app</h1>\r\n);\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './MainMenu.scss';\r\n\r\nconst MainMenu = ({ links, location }) => (\r\n  <ul className=\"main-menu\">\r\n    { links.map((link, index) =>\r\n      <li key={index}>\r\n        <Link className={(location.pathname === link.path && 'active') || ''} to={link.path}>{link.title}</Link>\r\n      </li>\r\n    )}\r\n  </ul>\r\n);\r\n\r\nMainMenu.propTypes = {\r\n  links: PropTypes.arrayOf(PropTypes.shape({\r\n    path: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n  })),\r\n};\r\n\r\nexport default withRouter(props => <MainMenu {...props}/>);\r\n","import React from 'react';\r\nimport Logo from '../../common/Logo/Logo';\r\nimport MainMenu from '../../layout/MainMenu/MainMenu';\r\nimport './NavBar.scss';\r\n\r\nclass NavBar extends React.Component {\r\n\r\n    state = {\r\n        links: [\r\n            { path: '/', title: 'Home Page' },\r\n            { path: '/posts', title: 'Posts Page' },\r\n            { path: '/posts/new', title: 'Add Post' },\r\n            { path: '/contact', title: 'Contact Page' }\r\n        ]\r\n    }\r\n\r\n    render() {\r\n        const { links } = this.state;\r\n        return (\r\n            <nav className='navbar'>\r\n                <Logo />\r\n                <MainMenu links={links} />\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './PageContainer.scss';\n\nconst PageContainer = ({ children }) => (\n  <div className='container-fluid'>\n    {children}\n  </div>\n);\n\nPageContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default PageContainer;\n","import React from 'react';\r\nimport NavBar from '../../features/NavBar/NavBar';\r\nimport PageContainer from '../PageContainer/PageContainer';\r\n\r\nconst MainLayout = ({ children }) => (\r\n    <div>\r\n        <PageContainer>\r\n            <NavBar />\r\n            {children}\r\n        </PageContainer>\r\n    </div>\r\n);\r\n\r\nexport default MainLayout;\r\n\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PageTitle.scss';\n\nconst PageTitle = ({ children }) => (\n  <h1 className=\"page-title\">\n     {children}\n  </h1>\n);\n\nPageTitle.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default PageTitle;\n","//export const API_URL = 'http://localhost:8000/api';\r\n//export const BASE_URL = 'http://localhost:3000';\r\n\r\nexport const API_URL = '/api';\r\nexport const BASE_URL = 'https://kodilla-blog.herokuapp.com';\r\n\r\n/*\r\nexport const API_URL = '/api';\r\nexport const BASE_URL = 'https://mernkodilla.herokuapp.com';\r\n*/","import axios from 'axios';\r\nimport { API_URL, BASE_URL } from '../config';\r\n\r\n/* SELECTORS */\r\nexport const getPosts = ({ posts }) => posts.data;\r\nexport const getPostsNumber = ({ posts }) => posts.amount;\r\nexport const getRequest = ({ posts }) => posts.request;\r\nexport const getSinglePost = ({ posts }) => posts.singlePost;\r\nexport const getPages = ({ posts }) => Math.ceil(posts.amount / posts.postsPerPage);\r\nexport const getPresentPage = ({posts}) => posts.presentPage;\r\n\r\n/* action name creator */\r\nconst reducerName = 'posts';\r\nconst createActionName = name => `app/${reducerName}/${name}`;\r\n\r\n/* ACTIONS */\r\nexport const LOAD_POSTS = createActionName('LOAD_POSTS');\r\nexport const START_REQUEST = createActionName('START_REQUEST');\r\nexport const END_REQUEST = createActionName('END_REQUEST');\r\nexport const ERROR_REQUEST = createActionName('ERROR_REQUEST');;\r\nexport const LOAD_SINGLE_POST = createActionName('LOAD_SINGLE_POST');\r\nexport const RESET_REQUEST = createActionName('RESET_REQUEST');\r\nexport const LOAD_POSTS_PAGE = createActionName('LOAD_POSTS_PAGE');\r\nexport const loadPosts = payload => ({ payload, type: LOAD_POSTS });\r\nexport const startRequest = () => ({ type: START_REQUEST });\r\nexport const endRequest = () => ({ type: END_REQUEST });\r\nexport const errorRequest = error => ({ error, type: ERROR_REQUEST });\r\nexport const loadSinglePost = payload => ({ payload, type: LOAD_SINGLE_POST});\r\nexport const resetRequest = () => ({ type: RESET_REQUEST });\r\nexport const loadPostsByPage = payload => ({ payload, type: LOAD_POSTS_PAGE });\r\n\r\n/* INITIAL STATE */\r\nconst initialState = {\r\n    data: [],\r\n    request: {\r\n        pending: false,\r\n        error: null,\r\n        success: null,\r\n    },\r\n    singlePost: {\r\n        id: '',\r\n        title: '',\r\n        content: '',\r\n        author: ''\r\n    },\r\n    amount: 0,\r\n    postsPerPage: 10,\r\n    presentPage: 1\r\n};\r\n\r\n/* REDUCER */\r\nexport default function reducer(statePart = initialState, action = {}) {\r\n    switch (action.type) {\r\n        case LOAD_POSTS:\r\n            return {...statePart, data: action.payload}\r\n        case START_REQUEST:\r\n            return {...statePart, request: { pending: true, error: null, success: null } };\r\n        case END_REQUEST:\r\n            return {...statePart, request: { pending: false, error: null, success: true } };\r\n        case ERROR_REQUEST:\r\n            return { ...statePart, request: { pending: false, error: action.error, success: false } };\r\n        case LOAD_SINGLE_POST:\r\n            return { ...statePart, singlePost: action.payload };\r\n        case RESET_REQUEST:\r\n            return { ...statePart, request: { pending: false, error: null, success: null } };\r\n        case LOAD_POSTS_PAGE:\r\n            return {\r\n                ...statePart,\r\n                postsPerPage: action.payload.postsPerPage,\r\n                presentPage: action.payload.presentPage,\r\n                amount: action.payload.amount,\r\n                data: [...action.payload.posts],\r\n            };\r\n        default:\r\n            return statePart;\r\n    }\r\n};\r\n\r\n/* THUNKS */\r\nexport const loadPostsRequest = () => {\r\n    return async dispatch => {\r\n  \r\n        dispatch(startRequest());\r\n        try {\r\n            //let res = await axios.get(`${API_URL}/posts`);\r\n            let res = await axios.get(`${BASE_URL}${API_URL}/posts`);\r\n            //await new Promise((resolve, reject) => setTimeout(resolve, 2000));\r\n            dispatch(loadPosts(res.data));\r\n            dispatch(endRequest());\r\n        } catch(e) {\r\n            dispatch(errorRequest(e.message));\r\n        }\r\n    };\r\n};\r\n\r\nexport const loadSinglePostRequest = id => {\r\n    return async dispatch => {\r\n  \r\n        dispatch(startRequest());\r\n        try {\r\n            //let res = await axios.get(`${API_URL}/posts/${id}`);\r\n            let res = await axios.get(`${BASE_URL}${API_URL}/posts/${id}`);\r\n            //await new Promise((resolve, reject) => setTimeout(resolve, 2000));\r\n            dispatch(loadSinglePost(res.data));\r\n            dispatch(endRequest());\r\n        } catch(e) {\r\n            dispatch(errorRequest(e.message));\r\n        }\r\n    };\r\n};\r\n\r\nexport const addPostRequest = (post) => {\r\n    return async dispatch => {\r\n  \r\n        dispatch(startRequest());\r\n        try {\r\n            // eslint-disable-next-line\r\n            //let res = await axios.post(`${API_URL}/posts`, post);\r\n            let res = await axios.post(`${BASE_URL}${API_URL}/posts`, post);\r\n            //await new Promise((resolve, reject) => setTimeout(resolve, 2000));\r\n            dispatch(endRequest());\r\n        } catch(e) {\r\n            dispatch(errorRequest(e.message));\r\n        }\r\n    };\r\n};\r\n\r\nexport const loadPostsByPageRequest = (page, postsPerPage = 10) => {\r\n    return async dispatch => {\r\n  \r\n        dispatch(startRequest());\r\n        try {\r\n  \r\n            const startAt = (page - 1) * postsPerPage;\r\n            const limit = postsPerPage;\r\n\r\n            //let res = await axios.get(`${API_URL}/posts/range/${startAt}/${limit}`);    \r\n            let res = await axios.get(`${BASE_URL}${API_URL}/posts/range/${startAt}/${limit}`);\r\n            //await new Promise((resolve, reject) => setTimeout(resolve, 2000));\r\n    \r\n            const payload = {\r\n                posts: res.data.posts,\r\n                amount: res.data.amount,\r\n                postsPerPage,\r\n                presentPage: page,\r\n            };\r\n  \r\n        dispatch(loadPostsByPage(payload));\r\n        dispatch(endRequest());\r\n  \r\n        } catch(e) {\r\n            dispatch(errorRequest(e.message));\r\n        }\r\n    };\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Button.scss';\r\n\r\nconst Button = ({ variant = '', children, ...otherProps }) => (\r\n  <button { ...otherProps } className={ `button button--${variant}`}>\r\n    { children }\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './SmallTitle.scss';\n\nconst SmallTitle = ({ children, ...otherProps }) => (\n  <h2 {...otherProps} className=\"small-title\">\n    { children }\n  </h2>\n);\n\nSmallTitle.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default SmallTitle;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nconst HtmlBox = ({ children, ...otherProps }) => (\r\n  <p {...otherProps} className=\"html-box\">\r\n    {ReactHtmlParser(children)}\r\n  </p>\r\n);\r\n\r\nHtmlBox.propTypes = {\r\n  children: PropTypes.string,\r\n};\r\n\r\nexport default HtmlBox;","const cutText = (content, maxLength) => {\r\n    if(content.length < 1) return 'Error';\r\n    if(content.length <= maxLength) return content;\r\n    return content.substr(0, content.lastIndexOf(' ', maxLength)) + '...';\r\n};\r\n\r\nexport default cutText;","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport Button from '../../common/Button/Button';\r\nimport SmallTitle from '../../common/SmallTitle/SmallTitle';\r\nimport HtmlBox from '../../common/HtmlBox/HtmlBox';\r\nimport cutText from './PostSummaryContainer';\r\nimport { Link } from 'react-router-dom';\r\nimport './PostSummary.scss';\r\n\r\nconst PostSummary = ({ id, title, content, author }) => (\r\n    <article className='post-summary'>\r\n        <SmallTitle>{title}</SmallTitle>\r\n        <p>Author: {author}</p>\r\n        <HtmlBox>{cutText(content, 250)}</HtmlBox>\r\n        <Button variant='primary'>\r\n            <Link to={`/posts/${id}`}>Read more</Link>\r\n        </Button>\r\n    </article>\r\n);\r\n\r\nPostSummary.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    content: PropTypes.string.isRequired,\r\n    author: PropTypes.string.isRequired\r\n};\r\n\r\nexport default PostSummary;","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport PostSummary from '../PostSummary/PostSummary';\r\n\r\nconst PostsList = ({ posts }) => (\r\n    <div>\r\n        <section className='posts-list'>\r\n            {posts.map(post => <PostSummary key={post.id} {...post} />)}\r\n        </section>\r\n    </div>\r\n);\r\n\r\nPostsList.propTypes = {\r\n    posts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            title: PropTypes.string.isRequired,\r\n            content: PropTypes.string.isRequired,\r\n            author: PropTypes.string.isRequired,\r\n        })\r\n    ),\r\n};\r\n\r\nexport default PostsList;","import React from 'react';\nimport { Animated } from 'react-animated-css';\n\nimport './Spinner.scss';\n\nconst Spinner = () => (\n  <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\n    <div className=\"lds-ellipsis\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  </Animated>\n);\n\nexport default Spinner;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Animated } from 'react-animated-css';\r\nimport { MdInfoOutline, MdDone, MdErrorOutline } from 'react-icons/md';\r\n\r\nimport './Alert.scss';\r\n\r\nconst Alert = ({ variant = '', children, ...otherProps }) => {\r\n\r\n  const icon = () => {\r\n    switch(variant) {\r\n      case 'info':\r\n        return <MdInfoOutline />\r\n      case 'success':\r\n        return <MdDone />\r\n      case 'warning':\r\n        return <MdErrorOutline />\r\n      case 'error':\r\n        return <MdErrorOutline />\r\n      default:\r\n        return <MdInfoOutline />\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\r\n      <div {...otherProps} className={`alert alert--${variant}`}>\r\n        {icon()}\r\n        <span className=\"alert__desc\">{children}</span>\r\n      </div>\r\n    </Animated>\r\n  )\r\n\r\n};\r\n\r\nAlert.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n  children: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Alert;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Pagination.scss';\r\n\r\nclass Pagination extends Component {\r\n\r\n\tstate = {\r\n\t\tpresentPage: this.props.initialPage || 1\r\n\t}\r\n\r\n\tchangePage = (newPage) => {\r\n\t\tconst { onPageChange  } = this.props;\r\n\t\tthis.setState({ presentPage: newPage });\r\n\t\tonPageChange(newPage);\r\n\t}\r\n\r\n\tskipToPage = increment => {\r\n\t\tconst { changePage } = this;\r\n\t\tconst { presentPage } = this.state;\r\n\t\tconst targetPage = presentPage + increment;\r\n\t\tchangePage(targetPage);\r\n\t}\r\n\r\n\trender () {\r\n\t\tconst { pages } = this.props;\r\n\t\tconst { presentPage } = this.state;\r\n\t\tconst { changePage, skipToPage } = this;\r\n\r\n\t\treturn (\r\n\t\t\t<div className='pagination'>\r\n\t\t\t\t<ul className='pagination__list'>\r\n\r\n\t\t\t\t\t{presentPage >= 2 && (\r\n\t\t\t\t\t\t<li className='pagination__list__item' onClick={() => {skipToPage(-1)}}>\r\n\t\t\t\t\t\t\t{'<'}\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t{[...Array(pages)].map((el, page) =>\r\n\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\tkey={++page}\r\n\t\t\t\t\t\t\tonClick={() => { changePage(page) }}\r\n\t\t\t\t\t\t\tclassName={`pagination__list__item${((page) === presentPage) ? ' pagination__list__item--active' : ''}`}>\r\n\t\t\t\t\t\t\t{page}\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t{presentPage !== pages && (\r\n\t\t\t\t\t\t<li className='pagination__list__item' onClick={() => {skipToPage(1)}}>\r\n\t\t\t\t\t\t\t{'>'}\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nPagination.propTypes = {\r\n\tpages: PropTypes.number.isRequired,\r\n\tinitialPage: PropTypes.number,\r\n\tonPageChange: PropTypes.func.isRequired,\r\n\r\n};\r\n\r\nexport default Pagination;\r\n\r\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport PostsList from '../PostsList/PostsList';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\nimport Alert from '../../common/Alert/Alert';\r\nimport Pagination from '../../common/Pagination/Pagination';\r\n\r\nclass Posts extends React.Component {\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst { loadPostsByPage, postsPerPage, initialPage } = this.props;\r\n\t\tloadPostsByPage(initialPage || 1, postsPerPage);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const { resetRequest } = this.props;\r\n        resetRequest();\r\n    }\r\n\r\n\tloadPostsPage = (page) => {\r\n\t\tconst { loadPostsByPage, postsPerPage } = this.props;\r\n\t\tloadPostsByPage(page, postsPerPage);\r\n\t}\r\n\r\n    render() {\r\n        const { posts, request, pages, presentPage} = this.props;\r\n        let { pagination } = this.props;\r\n        const { loadPostsPage } = this;\r\n\r\n        if (pagination === undefined) {\r\n\t\t\tpagination = true;\r\n\t\t}\r\n\r\n        if(!request.pending && request.success && posts.length > 0) {\r\n            return (\r\n                <div>\r\n                    <PostsList posts={posts} />\r\n                    {pagination && <Pagination pages={pages} initialPage={presentPage} onPageChange={loadPostsPage} />}\r\n                </div>\r\n            )\r\n        }\r\n        if(request.pending || request.success === null) {\r\n            return (\r\n                <div>\r\n                    <Spinner />\r\n                </div>\r\n            )\r\n        }\r\n        if(!request.pending && request.error !== null) {\r\n            return (\r\n                <div>\r\n                    <Alert variant='error'>{request.error}</Alert>\r\n                </div>\r\n            )\r\n        }\r\n        if(!request.pending && request.success && posts.length === 0) {\r\n            return (\r\n                <div>\r\n                    <Alert variant='info'>No posts</Alert>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n};\r\n\r\nPosts.propTypes = {\r\n    posts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            title: PropTypes.string.isRequired,\r\n            content: PropTypes.string.isRequired,\r\n            author: PropTypes.string.isRequired\r\n        })\r\n    ),\r\n    resetRequest: PropTypes.func.isRequired,\r\n    loadPostsByPage: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Posts;","import { connect } from 'react-redux';\r\nimport { getPosts, getRequest, getPages, loadPostsByPageRequest, getPresentPage, resetRequest} from '../../../redux/postsRedux';\r\nimport Posts from './Posts';\r\n\r\nconst mapStateToProps = state => ({\r\n    posts: getPosts(state),\r\n    request: getRequest(state),\r\n    pages: getPages(state),\r\n    presentPage: getPresentPage(state)\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    resetRequest: () => dispatch(resetRequest()),\r\n    loadPostsByPage: (page, postsPerPage) => dispatch(loadPostsByPageRequest(page, postsPerPage))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);","import React from 'react';\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport Posts from '../../features/Posts/PostsContainer';\r\n\r\nconst HomePage = () => (\r\n    <div>\r\n        <PageTitle>Blog</PageTitle>\r\n        <Posts postsPerPage={3} pagination={false} />\r\n    </div>\r\n);\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nclass PostsCounter extends React.Component {\r\n\r\n    render() {\r\n        const { posts } = this.props;\r\n        return (\r\n            <div>\r\n                {`${posts > 0}` ? `Posts number: ${posts}` : `- no posts -`}\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nPostsCounter.propTypes = {\r\n    posts: PropTypes.number,\r\n};\r\n\r\nexport default PostsCounter;\r\n","import { connect } from 'react-redux';\r\nimport { getPostsNumber } from '../../../redux/postsRedux';\r\nimport PostsCounter from './PostsCounter';\r\n\r\nconst mapStateToProps = state => ({\r\n    posts: getPostsNumber(state),\r\n})\r\n\r\nexport default connect(mapStateToProps)(PostsCounter);\r\n","import React from 'react';\r\nimport PostsPages from '../../common/PageTitle/PageTitle'\r\nimport Posts from '../../features/Posts/PostsContainer';\r\nimport PostsCounter from '../../features/PostsCounter/PostsCounterContainer';\r\n\r\nconst PostsPage = () => (\r\n    <div>\r\n        <PostsPages>Posts List</PostsPages>\r\n        <PostsCounter />\r\n        <Posts />\r\n    </div>\r\n);\r\n\r\nexport default PostsPage;","import React from 'react';\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\n\r\nconst ContactPage = () => (\r\n    <div>\r\n        <PageTitle>Contact Page</PageTitle>\r\n        <p>Your Favourite Blooger Ltd.</p>\r\n        <p>9432 Division Street</p>\r\n        <p>Stone Mountain, GA 30083</p>\r\n        <p>Mobile Number: 207-914-3411</p>\r\n    </div>\r\n);\r\n\r\nexport default ContactPage;","import React from 'react';\r\n\r\nconst NotFoundPage = () => (\r\n    <div>\r\n        <h1>Not Found Page</h1>\r\n    </div>\r\n);\r\n\r\nexport default NotFoundPage;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './TextField.scss';\r\n\r\nconst TextField = ({ value, label, onChange, ...otherProps }) => (\r\n  <label className=\"text-field\">\r\n    <span className={`text-field__label ${(!value.length > 0) ? 'text-field__label--big' : ''}`}>{label}</span>\r\n    <input {...otherProps} value={value} onChange={onChange} className=\"text-field__input\" />\r\n  </label>\r\n);\r\n\r\nTextField.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TextField;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './SectionTitle.scss';\r\n\r\nconst SectionTitle = ({ children }) => (\r\n  <h2 className=\"section-title\">\r\n     {children}\r\n  </h2>\r\n);\r\n\r\nSectionTitle.propTypes = {\r\n  children: PropTypes.string,\r\n};\r\n\r\nexport default SectionTitle;\r\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport TextField from '../../common/TextField/TextField';\r\nimport SectionTitle from '../../common/SectionTitle/SectionTitle';\r\nimport Button from '../../common/Button/Button';\r\nimport Alert from '../../common/Alert/Alert';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\nimport Editor from 'react-medium-editor';\r\nimport 'medium-editor/dist/css/medium-editor.css';\r\nimport 'medium-editor/dist/css/themes/default.css';\r\nimport './PostForm.scss';\r\n\r\nclass PostForm extends React.Component {\r\n\r\n    state = {\r\n        post: {\r\n            title: '',\r\n            author: '',\r\n            content: ''\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const { resetRequest } = this.props;\r\n        resetRequest();\r\n    }\r\n\r\n    render() {\r\n        const { post } = this.state;\r\n        const { handleChange, handleEditor, addPost } = this;\r\n        const { request } = this.props;\r\n\r\n        if(request.error) return <Alert variant=\"error\">{request.error}</Alert>\r\n        else if(request.success) return <Alert variant=\"success\">Post has been added!</Alert>\r\n        else if(request.pending) return <Spinner />\r\n        else return (\r\n            <form onSubmit={addPost}>\r\n                <TextField label='Title' value={post.title} onChange={handleChange} name='title' />\r\n                <TextField label=\"Author\" value={post.author} onChange={handleChange} name='author'/>\r\n                <SectionTitle>Edit post content</SectionTitle>\r\n                <Editor\r\n                    className='content-editor'\r\n                    text={post.content}\r\n                    options={{ placeholder: false, toolbar: { buttons: ['bold', 'italic', 'underline', 'anchor', 'h2', 'h3'] } }}\r\n                    onChange={handleEditor}\r\n                />\r\n                <Button variant='primary'>Add post</Button>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const { post } = this.state;\r\n        this.setState({ post: { ...post, [e.target.name]: e.target.value }});\r\n    }\r\n\r\n    handleEditor = (text) => {\r\n        const { post } = this.state;\r\n        this.setState({ post: { ...post, content: text }});\r\n    }\r\n\r\n    addPost = (e) => {\r\n        const { addPost } = this.props;\r\n        const { post } = this.state;\r\n        e.preventDefault();\r\n        addPost(post);\r\n    }\r\n};\r\n\r\nPostForm.propTypes = {\r\n    request: PropTypes.object.isRequired,\r\n    addPost: PropTypes.func.isRequired,\r\n    resetRequest: PropTypes.func.isRequired\r\n};\r\n\r\nexport default PostForm;","import { connect } from 'react-redux';\r\nimport { getRequest, addPostRequest, resetRequest } from '../../../redux/postsRedux';\r\nimport PostForm from './PostForm';\r\n\r\nconst mapStateToProps = state => ({\r\n    request: getRequest(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addPost: (post) => dispatch(addPostRequest(post)),\r\n    resetRequest: () => dispatch(resetRequest())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostForm);","import React from 'react';\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport PostForm from '../../features/PostForm/PostFormContainer';\r\n\r\nconst AddPostPage = () => (\r\n    <div>\r\n        <PageTitle>Add Post Page</PageTitle>\r\n        <PostForm />\r\n    </div>\r\n);\r\n\r\nexport default AddPostPage;","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\nimport Alert from '../../common/Alert/Alert';\r\nimport SmallTitle from '../../common/SmallTitle/SmallTitle';\r\nimport HtmlBox from '../../common/HtmlBox/HtmlBox';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { FacebookProvider, Comments, ShareButton } from 'react-facebook';\r\nimport { BASE_URL } from '../../../config';\r\nimport '../PostSummary/PostSummary.scss';\r\n\r\nclass SinglePost extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const { loadSinglePost, id } = this.props;\r\n        loadSinglePost(id);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const { resetRequest } = this.props;\r\n        resetRequest();\r\n    }\r\n    \r\n    render() {\r\n        const { singlePost, request, location } = this.props;\r\n        if(!request.pending && request.success && singlePost) {\r\n            return (\r\n                <div>\r\n                    <article className='post-summary'>\r\n                        <SmallTitle>{singlePost.title}</SmallTitle>\r\n                        <FacebookProvider appId='477626572851912'>\r\n                            <ShareButton href={`${BASE_URL}/${location.pathname}`}>\r\n                                Share\r\n                            </ShareButton>\r\n                        </FacebookProvider>\r\n                        <p>Author: {singlePost.author}</p>\r\n                        <HtmlBox>{singlePost.content}</HtmlBox>\r\n                        <FacebookProvider appId='477626572851912'>\r\n                            <Comments href={`${BASE_URL}/${location.pathname}`} />\r\n                        </FacebookProvider>\r\n                    </article>\r\n                </div>\r\n            )\r\n        }\r\n        if(request.pending || request.success === null) {\r\n            return (\r\n                <div>\r\n                    <Spinner />\r\n                </div>\r\n            )\r\n        }\r\n        if (!request.pending && request.error !== null) {\r\n            return (\r\n                <div>\r\n                    <Alert variant='error'>{request.error}</Alert>\r\n                </div>\r\n            )\r\n        }\r\n        if (!request.pending && request.success && singlePost === null ) {\r\n            return (\r\n                <div>\r\n                    <Alert variant='info'>No posts</Alert>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nSinglePost.propTypes = {\r\n    singlePost: PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        title: PropTypes.string.isRequired,\r\n        content: PropTypes.string.isRequired,\r\n        author: PropTypes.string.isRequired\r\n    }),\r\n    loadSinglePost: PropTypes.func.isRequired,\r\n    resetRequest: PropTypes.func.isRequired,\r\n};\r\n\r\n//export default SinglePost;\r\nexport default withRouter(props => <SinglePost {...props}/>);\r\n","import { connect } from 'react-redux';\r\nimport { getRequest, getSinglePost, loadSinglePostRequest, resetRequest } from '../../../redux/postsRedux';\r\nimport SinglePost from './SinglePost';\r\n\r\nconst mapStateToProps = state => ({\r\n    singlePost: getSinglePost(state),\r\n    request: getRequest(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    loadSinglePost: id => dispatch(loadSinglePostRequest(id)),\r\n    resetRequest: () => dispatch(resetRequest())\r\n});\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps)(SinglePost);","import React from 'react';\r\nimport SinglePostContainer from '../../features/SinglePost/SinglePostContainer';\r\n\r\nconst SinglePostPage = props => (\r\n    <div>\r\n        <SinglePostContainer id={props.match.params.id} />\r\n    </div>\r\n);\r\n\r\nexport default SinglePostPage;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport MainLayout from './components/layout/MainLayout/MainLayout';\r\nimport HomePage from './components/pages/Home/HomePage';\r\nimport PostsPage from './components/pages/Posts/PostsPage';\r\nimport ContactPage from './components/pages/Contact/ContactPage';\r\nimport NotFoundPage from './components/pages/NotFound/NotFoundPage';\r\nimport AddPostPage from './components/pages/AddPost/AddPostPage';\r\nimport SinglePostPage from './components/pages/SinglePost/SinglePostPage';\r\n\r\n\r\nimport './styles/global.scss';\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            posts: []\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <MainLayout>\r\n                <Switch>\r\n                    <Route path='/' exact component={HomePage} />\r\n                    <Route path='/posts' exact component={PostsPage} />\r\n                    <Route path='/posts/new' exact component={AddPostPage} />\r\n                    <Route path='/posts/:id' exact component={SinglePostPage} props={this.props} />\r\n                    <Route path='/contact' exact component={ContactPage} />\r\n                    <Route component={NotFoundPage} />\r\n                </Switch>\r\n            </MainLayout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\n// import reducers\r\nimport posts from './postsRedux';\r\n\r\n// combine reducers\r\nconst rootReducer = combineReducers({\r\n  posts,\r\n});\r\n\r\n// create store\r\nconst store = createStore(rootReducer,\r\n    compose(\r\n        applyMiddleware(thunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'animate.css/animate.min.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nconst Root = () => (\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));"],"sourceRoot":""}